==========  MVC Architecture  ==========

For this project we chose an MVC design pattern. Here are the few details of
our implementation.

# Model:

  The /model folder contains a set of tools that allows the program to execute
its technical part. Every functionnality is stored in its folder and at the
compilation a dynamic library is build. A static library named DLLoader allow
the main process to load only the tools it needs.

  The uses of the functionalities are ruled by a controller wich implement a
scenario of the program. It guide the lifetime of a program with an execution
tree.

# Contoller:

  The /controller folder contains sub folder corresponding to each executable.
A controller is basicaly a class with actions. Each actions describe the scenario
of a task. We can think of a seller who can sell products or manage his
inventory. For this example we'll have a mainAction() who have an decideAction()
that is waiting for a task and a sellAction() / manageInventoryAction().

  This class is implemented in the file that have the same name as the folder but
we can implement method in other files or add secondary controller to a process if
more organisation is required.

# View:

  For now there is no view implemented because there is no GUI. The few text outputs
are handled in the controllers. In the future we can easily think of a /view folder
wich could contains an abstract graphical engine with a set of external library so we
could run a GUI window.